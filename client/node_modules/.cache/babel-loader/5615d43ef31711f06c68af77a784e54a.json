{"ast":null,"code":"var _jsxFileName = \"/root/Documentos/henry/repo/henry app/HenryApp_grupo1/client/src/components/Cohort/FormCohort.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { addCohort, updateCohort, removeCohort } from '../../actions/cohort';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 0),\n    marginButton: theme.spacing(2)\n  },\n  delete: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n    marginBorder: '0px'\n  }\n}));\nexport function FormCohort({\n  match,\n  addCohort,\n  updateCohort,\n  removeCohort\n}) {\n  let id = match.params.id;\n  const history = useHistory();\n  const classes = useStyles();\n  const [input, setInput] = useState({\n    name: '',\n    startDate: '',\n    about: ''\n  });\n  useEffect(() => {\n    if (id) {\n      fetch(`http://localhost:3001/cohort/${id}`, {\n        credentials: 'include'\n      }).then(res => {\n        return res.json();\n      }).then(cohort => {\n        setInput({ ...input,\n          name: cohort.name,\n          startDate: cohort.startDate,\n          about: cohort.about\n        });\n      }).catch();\n    }\n  }, []);\n\n  const handleInputChange = function (e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    const cohort = {\n      name: input.name,\n      startDate: input.startDate,\n      about: input.about\n    };\n    id ? updateCohort(id, cohort) : addCohort(cohort);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, id ? /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Cohorte\") : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Nuevo Cohorte\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"name\",\n    label: \"Nombre\",\n    name: \"name\",\n    autoFocus: true,\n    value: input.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"startDate\",\n    id: \"startDate\",\n    value: input.startDate,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"about\",\n    label: \"Acerca del Cohorte\",\n    type: \"about\",\n    id: \"about\",\n    value: input.about,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), id ? /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Modificar\") : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Crear\"), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    className: classes.submit,\n    onClick: () => history.replace('/admin'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Cancelar\")), id ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.delete,\n    onClick: () => {\n      swal({\n        title: 'Eliminar',\n        text: 'Seguro desea eliminar el cohorte?',\n        icon: 'warning',\n        buttons: ['No', 'Si'],\n        dangerMode: true\n      }).then(res => {\n        if (res) {\n          removeCohort(id);\n          swal('Se elimino el cohorte correctamente', '', 'success').then(() => history.replace('/admin'));\n        } else {\n          return null;\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 14\n    }\n  }, \" Eliminar Cohorte \")) : null));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCohort: cohort => dispatch(addCohort(cohort)),\n    updateCohort: (id, cohort) => dispatch(updateCohort(id, cohort)),\n    removeCohort: id => dispatch(removeCohort(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(FormCohort);","map":{"version":3,"sources":["/root/Documentos/henry/repo/henry app/HenryApp_grupo1/client/src/components/Cohort/FormCohort.jsx"],"names":["React","useState","useEffect","Button","CssBaseline","TextField","Typography","makeStyles","Container","connect","addCohort","updateCohort","removeCohort","useHistory","swal","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","marginButton","delete","backgroundColor","color","marginBorder","FormCohort","match","id","params","history","classes","input","setInput","name","startDate","about","fetch","credentials","then","res","json","cohort","catch","handleInputChange","e","target","value","handleSubmit","preventDefault","replace","title","text","icon","buttons","dangerMode","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux'\n\nimport {addCohort, updateCohort, removeCohort} from '../../actions/cohort'\nimport {useHistory } from 'react-router-dom'\nimport swal from 'sweetalert'\n\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%', \n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(2, 0, 0),\n      marginButton: theme.spacing(2)\n    },\n    delete: {\n      backgroundColor: 'darkgray',\n      color: 'white',\n      marginBorder: '0px'     \n    }\n  }));\n  \n  export function FormCohort({ match, addCohort, updateCohort, removeCohort}) {\n\n     let id = match.params.id\n     const history = useHistory()\n\n    const classes = useStyles();\n    const [input, setInput]= useState({\n      name:'',\n      startDate: '',\n      about:''\n      \n    });\n\n    useEffect(() =>{\n      if(id){\n          fetch(`http://localhost:3001/cohort/${id}`,\n           {credentials: 'include'})\n           .then(res => {\n            return res.json()\n          })\n          .then(cohort => {\n            setInput({\n              ...input,\n                name: cohort.name,\n                startDate: cohort.startDate,\n                about: cohort.about  \n            })\n      }).catch()  \n      }  \n\n  }, [])\n\n    const handleInputChange = function(e) {\n      setInput({\n        ...input,\n        [e.target.name]:e.target.value\n      })\n    }\n\n    const handleSubmit = function (e) {\n        e.preventDefault()\n        const cohort = {\n          name: input.name,\n          startDate: input.startDate,\n          about: input.about\n        }\n       id ? updateCohort(id, cohort) : addCohort(cohort)\n\t}\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n       <CssBaseline />\n        <div className={classes.paper}>\n        { id ? \n        <Typography component=\"h1\" variant=\"h5\">\n        Cohorte\n      </Typography>:\n        <Typography component=\"h1\" variant=\"h5\">\n            Nuevo Cohorte\n          </Typography>  \n        }\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Nombre\"\n              name=\"name\"\n              autoFocus\n              value={input.name}\n              onChange={handleInputChange}\n            />\n            <TextField\n            type=\"date\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            name=\"startDate\"\n            id=\"startDate\"\n            value={input.startDate}\n            onChange={handleInputChange}\n            required\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"about\"\n              label=\"Acerca del Cohorte\"\n              type=\"about\"\n              id=\"about\"\n              value={input.about}\n              onChange={handleInputChange}\n            />\n\n            {id?\n            <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Modificar\n          </Button> :\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Crear\n            </Button>}\n            <Button\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={() => history.replace('/admin') }\n            >\n              Cancelar\n            </Button>\n          </form>\n           { id ?\n             <div>\n             <hr/>\n             <Button className={classes.delete}\n             onClick={() => {\n              swal({\n                title: 'Eliminar',\n                text: 'Seguro desea eliminar el cohorte?',\n                icon: 'warning',\n                buttons: ['No', 'Si'],\n                dangerMode: true,\n              }).then(res =>{\n                if(res){\n                   removeCohort(id)\n                   swal('Se elimino el cohorte correctamente', '', 'success')\n                   .then(() => history.replace('/admin'))    \n                } else {\n                  return null}\n              })\n            }}\n             > Eliminar Cohorte </Button>\n           </div> : null} \n        </div>\n      </Container>\n    )\n  }\n \n  const mapDispatchToProps = dispatch => { \n    return {\n      addCohort: (cohort) => dispatch(addCohort(cohort)),\n      updateCohort: (id, cohort) => dispatch(updateCohort(id, cohort)),\n      removeCohort: (id) => dispatch(removeCohort(id))\n    }\n  }\n  export default connect(null, mapDispatchToProps)(FormCohort)\n"]},"metadata":{},"sourceType":"module"}