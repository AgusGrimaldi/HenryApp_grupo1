{"ast":null,"code":"import axios from 'axios';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const SET_USER = 'SET_USER'; // const instance = axios.create({\n//     withCredentials: true\n//   })\n//CREAR USUARIO\n\nexport function addUser(data) {\n  return function (dispatch) {\n    console.log(data);\n    return axios.post(\"http://localhost:3001/user\", data).then(resp => {\n      dispatch({\n        type: ADD_USER,\n        payload: resp.data\n      });\n      alert(\"Usuario creado.\");\n    }).catch(err => {\n      alert(err);\n    });\n  };\n} //LOGUEAR USUARIO!!\n\nexport function setUser(user) {\n  console.log(user);\n  return {\n    type: SET_USER,\n    payload: user\n  };\n} //MODIFICAR DATOS DE MI USUARIO\n\nexport function updateUser(data) {\n  return function (dispatch) {\n    console.log(data);\n    return axios.put(`http://localhost:3001/user/settings/${data.id}`, data).then(res => {\n      dispatch({\n        type: UPDATE_USER,\n        payload: res.data\n      });\n      alert(\"Datos Actualizados correctamente\");\n    }).catch(err => {\n      alert(err);\n    });\n  };\n} // RECUPERAR PASSWORD, RECIBE MAIL USER PARA RECUPERAR PASSWORD\n\nexport function ForgotPass(data) {\n  let email = data.email;\n  return function (dispatch) {\n    console.log(data);\n    return axios({\n      method: \"POST\",\n      url: `http://localhost:3001/email/send-email/forgotPassword/${data.email}`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        email\n      }\n    }).then(res => {\n      dispatch({\n        type: RESET_PASSWORD,\n        payload: res.data\n      });\n      alert(\"Datos Actualizados correctamente\");\n    }).catch(err => {\n      alert(err);\n    });\n  };\n}","map":{"version":3,"sources":["/root/Documentos/henry/repo/henry app/HenryApp_grupo1/client/src/actions/user.js"],"names":["axios","ADD_USER","UPDATE_USER","RESET_PASSWORD","SET_USER","addUser","data","dispatch","console","log","post","then","resp","type","payload","alert","catch","err","setUser","user","updateUser","put","id","res","ForgotPass","email","method","url","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB,C,CACP;AACA;AACA;AAEA;;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACzB,SAAO,UAAUC,QAAV,EAAmB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAON,KAAK,CAACU,IAAN,CAAW,4BAAX,EAAwCJ,IAAxC,EACNK,IADM,CACDC,IAAI,IAAE;AACRL,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAEZ,QAAP;AAAiBa,QAAAA,OAAO,EAAEF,IAAI,CAACN;AAA/B,OAAD,CAAR;AACAS,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,KAJM,EAKNC,KALM,CAKAC,GAAG,IAAE;AACRF,MAAAA,KAAK,CAACE,GAAD,CAAL;AACH,KAPM,CAAP;AASH,GAXD;AAYH,C,CAED;;AACA,OAAO,SAASC,OAAT,CAAkBC,IAAlB,EAAuB;AAC1BX,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,SAAO;AAACN,IAAAA,IAAI,EAACT,QAAN;AAAgBU,IAAAA,OAAO,EAACK;AAAxB,GAAP;AACH,C,CAGD;;AAEA,OAAO,SAASC,UAAT,CAAoBd,IAApB,EAAyB;AAC5B,SAAO,UAAUC,QAAV,EAAmB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAON,KAAK,CAACqB,GAAN,CAAW,uCAAsCf,IAAI,CAACgB,EAAG,EAAzD,EAA4DhB,IAA5D,EACNK,IADM,CACDY,GAAG,IAAI;AACThB,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAEX,WAAP;AAAoBY,QAAAA,OAAO,EAAES,GAAG,CAACjB;AAAjC,OAAD,CAAR;AACAS,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KAJM,EAKNC,KALM,CAKAC,GAAG,IAAG;AACTF,MAAAA,KAAK,CAACE,GAAD,CAAL;AACH,KAPM,CAAP;AAQH,GAVD;AAWH,C,CAED;;AACA,OAAO,SAASO,UAAT,CAAoBlB,IAApB,EAAyB;AAC5B,MAAImB,KAAK,GAAGnB,IAAI,CAACmB,KAAjB;AACA,SAAO,UAAUlB,QAAV,EAAmB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAON,KAAK,CAAC;AACT0B,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAG,yDAAwDrB,IAAI,CAACmB,KAAM,EAFhE;AAGTG,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHA;AAMTtB,MAAAA,IAAI,EAAE;AACFmB,QAAAA;AADE;AANG,KAAD,CAAL,CAUNd,IAVM,CAUDY,GAAG,IAAI;AACThB,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAEV,cAAP;AAAuBW,QAAAA,OAAO,EAAES,GAAG,CAACjB;AAApC,OAAD,CAAR;AACAS,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KAbM,EAcNC,KAdM,CAcAC,GAAG,IAAG;AACTF,MAAAA,KAAK,CAACE,GAAD,CAAL;AACH,KAhBM,CAAP;AAiBH,GAnBD;AAoBH","sourcesContent":["import axios from 'axios';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const SET_USER = 'SET_USER';\n// const instance = axios.create({\n//     withCredentials: true\n//   })\n\n//CREAR USUARIO\nexport function addUser(data){\n    return function (dispatch){\n        console.log(data)\n        return axios.post(\"http://localhost:3001/user\",data)\n        .then(resp=>{\n            dispatch({type: ADD_USER, payload: resp.data})\n            alert(\"Usuario creado.\")\n        })\n        .catch(err=>{\n            alert(err);\n        })\n        \n    }\n}\n\n//LOGUEAR USUARIO!!\nexport function setUser (user){\n    console.log(user);\n    return {type:SET_USER, payload:user}\n}\n\n\n//MODIFICAR DATOS DE MI USUARIO\n\nexport function updateUser(data){\n    return function (dispatch){\n        console.log(data)\n        return axios.put(`http://localhost:3001/user/settings/${data.id}`, data)\n        .then(res => {\n            dispatch({type: UPDATE_USER, payload: res.data})\n            alert(\"Datos Actualizados correctamente\")\n        })\n        .catch(err =>{\n            alert(err)\n        })\n    }\n}\n\n// RECUPERAR PASSWORD, RECIBE MAIL USER PARA RECUPERAR PASSWORD\nexport function ForgotPass(data){\n    let email = data.email; \n    return function (dispatch){\n        console.log(data)\n        return axios({\n            method: \"POST\",\n            url: `http://localhost:3001/email/send-email/forgotPassword/${data.email}`, \n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                email\n            }\n    })\n        .then(res => {\n            dispatch({type: RESET_PASSWORD, payload: res.data})\n            alert(\"Datos Actualizados correctamente\")\n        })\n        .catch(err =>{\n            alert(err)\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}