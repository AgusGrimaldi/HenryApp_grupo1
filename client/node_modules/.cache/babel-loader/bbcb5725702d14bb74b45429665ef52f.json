{"ast":null,"code":"import swal from 'sweetalert';\nexport const ADD_COHORT = 'ADD_COHORT';\nexport const UPDATE_COHORT = 'UPDATE_COHORT';\nexport const GET_COHORT_DETAIL = 'GET_COHORT_DETAIL';\nexport const GET_COHORTS = 'GET_COHORTS';\nexport const REMOVE_COHORT = 'REMOVE_COHORT';\nexport function addCohort(cohort) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/create`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cohort)\n    }).then(res => res.json()).then(data => {\n      dispatch({\n        type: 'ADD_COHORT',\n        payload: data.cohort\n      });\n      swal(data.message);\n    }).catch(err => swal(err, '', 'error'));\n  };\n}\nexport function updateCohort(id, cohort) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/update/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cohort)\n    }).then(res => {\n      if (res.status === 400) {\n        swal(res.message);\n      } else {\n        dispatch({\n          type: 'UPDATE_COHORT',\n          payload: res.cohort\n        });\n        swal('Cohorte modificado correctamente', '', 'success');\n      }\n    }).catch(err => swal(err, '', 'error'));\n  };\n}\nexport function getCohorts() {\n  return function (dispatch) {\n    return fetch('http://localhost:3001/cohort', {\n      credentials: 'include'\n    }).then(res => res.json()).then(cohorts => dispatch({\n      type: 'GET_COHORTS',\n      payload: cohorts\n    }));\n  };\n}\nexport function getCohortDetail(id) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/${id}`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(cohort => dispatch({\n      type: 'GET_COHORT_DETAIL',\n      payload: cohort\n    }));\n  };\n}\nexport function removeCohort(id) {\n  return function (dispatch) {\n    fetch(`http://localhost:3001/cohort/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(cohort => {\n      dispatch({\n        type: 'REMOVE_COHORT',\n        payload: cohort.id\n      });\n    }).catch(err => swal(err));\n  };\n}","map":{"version":3,"sources":["/root/Documentos/henry/repo/henry app/HenryApp_grupo1/client/src/actions/cohort.js"],"names":["swal","ADD_COHORT","UPDATE_COHORT","GET_COHORT_DETAIL","GET_COHORTS","REMOVE_COHORT","addCohort","cohort","dispatch","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","res","json","data","type","payload","message","catch","err","updateCohort","id","status","getCohorts","cohorts","getCohortDetail","removeCohort"],"mappings":"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","sourcesContent":["import swal from 'sweetalert'\nexport const ADD_COHORT = 'ADD_COHORT'\nexport const UPDATE_COHORT = 'UPDATE_COHORT'\nexport const GET_COHORT_DETAIL = 'GET_COHORT_DETAIL'\nexport const GET_COHORTS = 'GET_COHORTS'\nexport const REMOVE_COHORT = 'REMOVE_COHORT'\n\nexport function addCohort(cohort) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/create`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(cohort),\n    })\n      .then(res => res.json())\n      .then(data => {\n           dispatch({\n          type: 'ADD_COHORT',\n          payload: data.cohort,\n\n        })\n       swal(data.message)                \n      })\n      .catch(err => swal(err, '', 'error'))\n  }\n}\n\nexport function updateCohort(id, cohort) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/update/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(cohort),\n    })\n    .then(res => {\n      if (res.status === 400) {\n        swal(res.message)\n      } else {\n        dispatch({\n          type: 'UPDATE_COHORT',\n          payload: res.cohort,\n        })\n        swal('Cohorte modificado correctamente','', 'success')\n      }\n      })  \n    .catch(err => swal(err, '', 'error'))\n  }\n}\n\nexport function getCohorts() {\n  return function (dispatch) {\n    return fetch('http://localhost:3001/cohort', {\n       credentials: 'include' })\n      .then((res) => res.json())\n      .then((cohorts) =>\n        dispatch({\n          type: 'GET_COHORTS',\n          payload: cohorts,\n        })\n      )\n  }\n}\n\nexport function getCohortDetail(id) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/cohort/${id}`, {\n      credentials: 'include',\n    })\n      .then(res => res.json())\n      .then(cohort =>\n        dispatch({\n          type: 'GET_COHORT_DETAIL',\n          payload: cohort,\n        })\n      )\n  }\n}\n\nexport function removeCohort(id) {\n  return function (dispatch) {\n    fetch(`http://localhost:3001/cohort/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => res.json())\n      .then(cohort => {\n        dispatch({\n          type: 'REMOVE_COHORT',\n          payload: cohort.id,\n        })\n      })\n      .catch(err => swal(err))\n  }\n}"]},"metadata":{},"sourceType":"module"}